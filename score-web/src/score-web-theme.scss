@use '@angular/material' as mat;

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$score-web-primary: mat.define-palette(mat.$blue-gray-palette);
$score-web-accent: mat.define-palette(mat.$amber-palette);

// The warn palette is optional (defaults to red).
$score-web-warn: mat.define-palette(mat.$deep-orange-palette);

$score-default-typography-level: mat.define-typography-level(
  $font-size: 14px,
  $line-height: 20px,
  $font-weight: 400,
  $font-family: null,
  $letter-spacing: null
);

$score-typography-config: mat.define-typography-config(
  $font-family: 'Roboto, Helvetica Neue, sans-serif',
  $body-1: $score-default-typography-level,
  $body-2: $score-default-typography-level,
  $button: $score-default-typography-level,
);

// Create the theme object (a Sass map containing all of the palettes).
$score-web-theme: mat.define-light-theme((
  color: (
    primary: $score-web-primary,
    accent: $score-web-accent,
    warn: $score-web-warn,
  ),
  typography: $score-typography-config,
  density: 0,
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($score-web-theme);
